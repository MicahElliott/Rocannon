" Auto-generated by txt2actions.vim
let actions = [
  \ {'word': 'a10_server', 'menu': 'Manage A10 Networks AX/SoftAX/Thunder/vThunder devices'},
  \ {'word': 'a10_service_group', 'menu': 'Manage A10 Networks AX/SoftAX/Thunder/vThunder devices'},
  \ {'word': 'a10_virtual_server', 'menu': 'Manage A10 Networks AX/SoftAX/Thunder/vThunder devices'},
  \ {'word': 'acl', 'menu': 'Sets and retrieves file ACL information.'},
  \ {'word': 'add_host', 'menu': 'add a host (and alternatively a group) to the ansible-playbook in-memory inventory'},
  \ {'word': 'airbrake_deployment', 'menu': 'Notify airbrake about app deployments'},
  \ {'word': 'alternatives', 'menu': 'Manages alternative programs for common commands'},
  \ {'word': 'apache2_module', 'menu': 'enables/disables a module of the Apache2 webserver'},
  \ {'word': 'apt', 'menu': 'Manages apt-packages'},
  \ {'word': 'apt_key', 'menu': 'Add or remove an apt key'},
  \ {'word': 'apt_repository', 'menu': 'Add and remove APT repositories'},
  \ {'word': 'apt_rpm', 'menu': 'apt_rpm package manager'},
  \ {'word': 'assemble', 'menu': 'Assembles a configuration file from fragments'},
  \ {'word': 'assert', 'menu': 'Fail with custom message'},
  \ {'word': 'at', 'menu': 'Schedule the execution of a command or script file via the at command.'},
  \ {'word': 'authorized_key', 'menu': 'Adds or removes an SSH authorized key'},
  \ {'word': 'azure', 'menu': 'create or terminate a virtual machine in azure'},
  \ {'word': 'bigip_facts', 'menu': 'Collect facts from F5 BIG-IP devices'},
  \ {'word': 'bigip_monitor_http', 'menu': 'Manages F5 BIG-IP LTM http monitors'},
  \ {'word': 'bigip_monitor_tcp', 'menu': 'Manages F5 BIG-IP LTM tcp monitors'},
  \ {'word': 'bigip_node', 'menu': 'Manages F5 BIG-IP LTM nodes'},
  \ {'word': 'bigip_pool', 'menu': 'Manages F5 BIG-IP LTM pools'},
  \ {'word': 'bigip_pool_member', 'menu': 'Manages F5 BIG-IP LTM pool members'},
  \ {'word': 'bigpanda', 'menu': 'Notify BigPanda about deployments'},
  \ {'word': 'boundary_meter', 'menu': 'Manage boundary meters'},
  \ {'word': 'bzr', 'menu': 'Deploy software (or files) from bzr branches'},
  \ {'word': 'campfire', 'menu': 'Send a message to Campfire'},
  \ {'word': 'capabilities', 'menu': 'Manage Linux capabilities'},
  \ {'word': 'cloudformation', 'menu': 'create a AWS CloudFormation stack'},
  \ {'word': 'command', 'menu': 'Executes a command on a remote node'},
  \ {'word': 'composer', 'menu': 'Dependency Manager for PHP'},
  \ {'word': 'copy', 'menu': 'Copies files to remote locations.'},
  \ {'word': 'cpanm', 'menu': 'Manages Perl library dependencies.'},
  \ {'word': 'cron', 'menu': 'Manage cron.d and crontab entries.'},
  \ {'word': 'datadog_event', 'menu': 'Posts events to DataDog  service'},
  \ {'word': 'debconf', 'menu': 'Configure a .deb package'},
  \ {'word': 'debug', 'menu': 'Print statements during execution'},
  \ {'word': 'digital_ocean', 'menu': 'Create/delete a droplet/SSH_key in DigitalOcean'},
  \ {'word': 'digital_ocean_domain', 'menu': 'Create/delete a DNS record in DigitalOcean'},
  \ {'word': 'digital_ocean_sshkey', 'menu': 'Create/delete an SSH key in DigitalOcean'},
  \ {'word': 'django_manage', 'menu': 'Manages a Django application.'},
  \ {'word': 'dnsimple', 'menu': 'Interface with dnsimple.com (a DNS hosting service).'},
  \ {'word': 'dnsmadeeasy', 'menu': 'Interface with dnsmadeeasy.com (a DNS hosting service).'},
  \ {'word': 'docker', 'menu': 'manage docker containers'},
  \ {'word': 'easy_install', 'menu': 'Installs Python libraries'},
  \ {'word': 'ec2', 'menu': 'create, terminate, start or stop an instance in ec2, return instanceid'},
  \ {'word': 'ec2_ami', 'menu': 'create or destroy an image in ec2, return imageid'},
  \ {'word': 'ec2_ami_search', 'menu': 'Retrieve AWS AMI for a given operating system.'},
  \ {'word': 'ec2_asg', 'menu': 'Create or delete AWS Autoscaling Groups'},
  \ {'word': 'ec2_eip', 'menu': 'associate an EC2 elastic IP with an instance.'},
  \ {'word': 'ec2_elb', 'menu': 'De-registers or registers instances from EC2 ELBs'},
  \ {'word': 'ec2_elb_lb', 'menu': 'Creates or destroys Amazon ELB.'},
  \ {'word': 'ec2_facts', 'menu': 'Gathers facts about remote hosts within ec2 (aws)'},
  \ {'word': 'ec2_group', 'menu': 'maintain an ec2 VPC security group.'},
  \ {'word': 'ec2_key', 'menu': 'maintain an ec2 key pair.'},
  \ {'word': 'ec2_lc', 'menu': 'Create or delete AWS Autoscaling Launch Configurations'},
  \ {'word': 'ec2_metric_alarm', 'menu': 'Create/update or delete AWS Cloudwatch ''metric alarms'''},
  \ {'word': 'ec2_scaling_policy', 'menu': 'Create or delete AWS scaling policies for Autoscaling groups'},
  \ {'word': 'ec2_snapshot', 'menu': 'creates a snapshot from an existing volume'},
  \ {'word': 'ec2_tag', 'menu': 'create and remove tag(s) to ec2 resources.'},
  \ {'word': 'ec2_vol', 'menu': 'create and attach a volume, return volume id and device map'},
  \ {'word': 'ec2_vpc', 'menu': 'configure AWS virtual private clouds'},
  \ {'word': 'ejabberd_user', 'menu': 'Manages users for ejabberd servers'},
  \ {'word': 'elasticache', 'menu': 'Manage cache clusters in Amazon Elasticache.'},
  \ {'word': 'facter', 'menu': 'Runs the discovery program `facter'' on the remote system'},
  \ {'word': 'fail', 'menu': 'Fail with custom message'},
  \ {'word': 'fetch', 'menu': 'Fetches a file from remote nodes'},
  \ {'word': 'file', 'menu': 'Sets attributes of files'},
  \ {'word': 'filesystem', 'menu': 'Makes file system on block device'},
  \ {'word': 'fireball', 'menu': 'Enable fireball mode on remote node'},
  \ {'word': 'firewalld', 'menu': 'Manage arbitrary ports/services with firewalld'},
  \ {'word': 'flowdock', 'menu': 'Send a message to a flowdock'},
  \ {'word': 'gc_storage', 'menu': 'This module manages objects/buckets in Google Cloud Storage.'},
  \ {'word': 'gce', 'menu': 'create or terminate GCE instances'},
  \ {'word': 'gce_lb', 'menu': 'create/destroy GCE load-balancer resources'},
  \ {'word': 'gce_net', 'menu': 'create/destroy GCE networks and firewall rules'},
  \ {'word': 'gce_pd', 'menu': 'utilize GCE persistent disk resources'},
  \ {'word': 'gem', 'menu': 'Manage Ruby gems'},
  \ {'word': 'get_url', 'menu': 'Downloads files from HTTP, HTTPS, or FTP to node'},
  \ {'word': 'getent', 'menu': 'a wrapper to the unix getent utility'},
  \ {'word': 'git', 'menu': 'Deploy software (or files) from git checkouts'},
  \ {'word': 'github_hooks', 'menu': 'Manages github service hooks.'},
  \ {'word': 'glance_image', 'menu': 'Add/Delete images from glance'},
  \ {'word': 'group', 'menu': 'Add or remove groups'},
  \ {'word': 'group_by', 'menu': 'Create Ansible groups based on facts'},
  \ {'word': 'grove', 'menu': 'Sends a notification to a grove.io channel'},
  \ {'word': 'hg', 'menu': 'Manages Mercurial (hg) repositories.'},
  \ {'word': 'hipchat', 'menu': 'Send a message to hipchat'},
  \ {'word': 'homebrew', 'menu': 'Package manager for Homebrew'},
  \ {'word': 'homebrew_cask', 'menu': 'Install/uninstall homebrew casks.'},
  \ {'word': 'homebrew_tap', 'menu': 'Tap a Homebrew repository.'},
  \ {'word': 'hostname', 'menu': 'Manage hostname'},
  \ {'word': 'htpasswd', 'menu': 'manage user files for basic authentication'},
  \ {'word': 'include_vars', 'menu': 'Load variables from files, dynamically within a task.'},
  \ {'word': 'ini_file', 'menu': 'Tweak settings in INI files'},
  \ {'word': 'irc', 'menu': 'Send a message to an IRC channel'},
  \ {'word': 'jabber', 'menu': 'Send a message to jabber user or chat room'},
  \ {'word': 'jboss', 'menu': 'deploy applications to JBoss'},
  \ {'word': 'jira', 'menu': 'create and modify issues in a JIRA instance'},
  \ {'word': 'kernel_blacklist', 'menu': 'Blacklist kernel modules'},
  \ {'word': 'keystone_user', 'menu': 'Manage OpenStack Identity (keystone) users, tenants and roles'},
  \ {'word': 'layman', 'menu': 'Manage Gentoo overlays'},
  \ {'word': 'librato_annotation', 'menu': 'create an annotation in librato'},
  \ {'word': 'lineinfile', 'menu': 'Ensure a particular line is in a file, or replace an existing line using a back-referenced regu...'},
  \ {'word': 'linode', 'menu': 'create / delete / stop / restart an instance in Linode Public Cloud'},
  \ {'word': 'lldp', 'menu': 'get details reported by lldp'},
  \ {'word': 'locale_gen', 'menu': 'Creates or removes locales.'},
  \ {'word': 'logentries', 'menu': 'Module for tracking logs via logentries.com'},
  \ {'word': 'lvg', 'menu': 'Configure LVM volume groups'},
  \ {'word': 'lvol', 'menu': 'Configure LVM logical volumes'},
  \ {'word': 'macports', 'menu': 'Package manager for MacPorts'},
  \ {'word': 'mail', 'menu': 'Send an email'},
  \ {'word': 'modprobe', 'menu': 'Add or remove kernel modules'},
  \ {'word': 'mongodb_user', 'menu': 'Adds or removes a user from a MongoDB database.'},
  \ {'word': 'monit', 'menu': 'Manage the state of a program monitored via Monit'},
  \ {'word': 'mount', 'menu': 'Control active and configured mount points'},
  \ {'word': 'mqtt', 'menu': 'Publish a message on an MQTT topic for the IoT'},
  \ {'word': 'mysql_db', 'menu': 'Add or remove MySQL databases from a remote host.'},
  \ {'word': 'mysql_replication', 'menu': 'Manage MySQL replication'},
  \ {'word': 'mysql_user', 'menu': 'Adds or removes a user from a MySQL database.'},
  \ {'word': 'mysql_variables', 'menu': 'Manage MySQL global variables'},
  \ {'word': 'nagios', 'menu': 'Perform common tasks in Nagios related to downtime and notifications.'},
  \ {'word': 'netscaler', 'menu': 'Manages Citrix NetScaler entities'},
  \ {'word': 'newrelic_deployment', 'menu': 'Notify newrelic about app deployments'},
  \ {'word': 'nexmo', 'menu': 'Send a SMS via nexmo'},
  \ {'word': 'nova_compute', 'menu': 'Create/Delete VMs from OpenStack'},
  \ {'word': 'nova_keypair', 'menu': 'Add/Delete key pair from nova'},
  \ {'word': 'npm', 'menu': 'Manage node.js packages with npm'},
  \ {'word': 'ohai', 'menu': 'Returns inventory data from `Ohai'''},
  \ {'word': 'open_iscsi', 'menu': 'Manage iscsi targets with open-iscsi'},
  \ {'word': 'openbsd_pkg', 'menu': 'Manage packages on OpenBSD.'},
  \ {'word': 'openvswitch_bridge', 'menu': 'Manage Open vSwitch bridges'},
  \ {'word': 'openvswitch_port', 'menu': 'Manage Open vSwitch ports'},
  \ {'word': 'opkg', 'menu': 'Package manager for OpenWrt'},
  \ {'word': 'osx_say', 'menu': 'Makes an OSX computer to speak.'},
  \ {'word': 'ovirt', 'menu': 'oVirt/RHEV platform management'},
  \ {'word': 'pacman', 'menu': 'Manage packages with `pacman'''},
  \ {'word': 'pagerduty', 'menu': 'Create PagerDuty maintenance windows'},
  \ {'word': 'pause', 'menu': 'Pause playbook execution'},
  \ {'word': 'ping', 'menu': 'Try to connect to host and return `pong'' on success.'},
  \ {'word': 'pingdom', 'menu': 'Pause/unpause Pingdom alerts'},
  \ {'word': 'pip', 'menu': 'Manages Python library dependencies.'},
  \ {'word': 'pkgin', 'menu': 'Package manager for SmartOS'},
  \ {'word': 'pkgng', 'menu': 'Package manager for FreeBSD >= 9.0'},
  \ {'word': 'pkgutil', 'menu': 'Manage CSW-Packages on Solaris'},
  \ {'word': 'portage', 'menu': 'Package manager for Gentoo'},
  \ {'word': 'portinstall', 'menu': 'Installing packages from FreeBSD''s ports system'},
  \ {'word': 'postgresql_db', 'menu': 'Add or remove PostgreSQL databases from a remote host.'},
  \ {'word': 'postgresql_privs', 'menu': 'Grant or revoke privileges on PostgreSQL database objects.'},
  \ {'word': 'postgresql_user', 'menu': 'Adds or removes a users (roles) from a PostgreSQL database.'},
  \ {'word': 'quantum_floating_ip', 'menu': 'Add/Remove floating IP from an instance'},
  \ {'word': 'quantum_floating_ip_associate', 'menu': 'Associate or disassociate a particular floating IP with an instance'},
  \ {'word': 'quantum_network', 'menu': 'Creates/Removes networks from OpenStack'},
  \ {'word': 'quantum_router', 'menu': 'Create or Remove router from openstack'},
  \ {'word': 'quantum_router_gateway', 'menu': 'set/unset a gateway interface for the router with the specified external network'},
  \ {'word': 'quantum_router_interface', 'menu': 'Attach/Dettach a subnet''s interface to a router'},
  \ {'word': 'quantum_subnet', 'menu': 'Add/remove subnet from a network'},
  \ {'word': 'rabbitmq_parameter', 'menu': 'Adds or removes parameters to RabbitMQ'},
  \ {'word': 'rabbitmq_plugin', 'menu': 'Adds or removes plugins to RabbitMQ'},
  \ {'word': 'rabbitmq_policy', 'menu': 'Manage the state of policies in RabbitMQ.'},
  \ {'word': 'rabbitmq_user', 'menu': 'Adds or removes users to RabbitMQ'},
  \ {'word': 'rabbitmq_vhost', 'menu': 'Manage the state of a virtual host in RabbitMQ'},
  \ {'word': 'raw', 'menu': 'Executes a low-down and dirty SSH command'},
  \ {'word': 'rax', 'menu': 'create / delete an instance in Rackspace Public Cloud'},
  \ {'word': 'rax_cbs', 'menu': 'Manipulate Rackspace Cloud Block Storage Volumes'},
  \ {'word': 'rax_cbs_attachments', 'menu': 'Manipulate Rackspace Cloud Block Storage Volume Attachments'},
  \ {'word': 'rax_cdb', 'menu': 'create/delete or resize a Rackspace Cloud Databases instance'},
  \ {'word': 'rax_cdb_database', 'menu': 'create / delete a database in the Cloud Databases'},
  \ {'word': 'rax_cdb_user', 'menu': 'create / delete a Rackspace Cloud Database'},
  \ {'word': 'rax_clb', 'menu': 'create / delete a load balancer in Rackspace Public Cloud'},
  \ {'word': 'rax_clb_nodes', 'menu': 'add, modify and remove nodes from a Rackspace Cloud Load Balancer'},
  \ {'word': 'rax_dns', 'menu': 'Manage domains on Rackspace Cloud DNS'},
  \ {'word': 'rax_dns_record', 'menu': 'Manage DNS records on Rackspace Cloud DNS'},
  \ {'word': 'rax_facts', 'menu': 'Gather facts for Rackspace Cloud Servers'},
  \ {'word': 'rax_files', 'menu': 'Manipulate Rackspace Cloud Files Containers'},
  \ {'word': 'rax_files_objects', 'menu': 'Upload, download, and delete objects in Rackspace Cloud Files'},
  \ {'word': 'rax_identity', 'menu': 'Load Rackspace Cloud Identity'},
  \ {'word': 'rax_keypair', 'menu': 'Create a keypair for use with Rackspace Cloud Servers'},
  \ {'word': 'rax_meta', 'menu': 'Manipulate metadata for Rackspace Cloud Servers'},
  \ {'word': 'rax_network', 'menu': 'create / delete an isolated network in Rackspace Public Cloud'},
  \ {'word': 'rax_queue', 'menu': 'create / delete a queue in Rackspace Public Cloud'},
  \ {'word': 'rax_scaling_group', 'menu': 'Manipulate Rackspace Cloud Autoscale Groups'},
  \ {'word': 'rax_scaling_policy', 'menu': 'Manipulate Rackspace Cloud Autoscale Scaling Policy'},
  \ {'word': 'rds', 'menu': 'create, delete, or modify an Amazon rds instance'},
  \ {'word': 'rds_param_group', 'menu': 'manage RDS parameter groups'},
  \ {'word': 'rds_subnet_group', 'menu': 'manage RDS database subnet groups'},
  \ {'word': 'redhat_subscription', 'menu': 'Manage Red Hat Network registration and subscriptions using the `subscription-manager'' command'},
  \ {'word': 'redis', 'menu': 'Various redis commands, slave and flush'},
  \ {'word': 'replace', 'menu': 'Replace all instances of a particular string in a file using a back-referenced regular expressi...'},
  \ {'word': 'rhn_channel', 'menu': 'Adds or removes Red Hat software channels'},
  \ {'word': 'rhn_register', 'menu': 'Manage Red Hat Network registration using the `rhnreg_ks'' command'},
  \ {'word': 'riak', 'menu': 'This module handles some common Riak operations'},
  \ {'word': 'rollbar_deployment', 'menu': 'Notify Rollbar about app deployments'},
  \ {'word': 'route53', 'menu': 'add or delete entries in Amazons Route53 DNS service'},
  \ {'word': 'rpm_key', 'menu': 'Adds or removes a gpg key from the rpm db'},
  \ {'word': 's3', 'menu': 'S3 module putting a file into S3.'},
  \ {'word': 'script', 'menu': 'Runs a local script on a remote node after transferring it'},
  \ {'word': 'seboolean', 'menu': 'Toggles SELinux booleans.'},
  \ {'word': 'selinux', 'menu': 'Change policy and state of SELinux'},
  \ {'word': 'service', 'menu': 'Manage services.'},
  \ {'word': 'set_fact', 'menu': 'Set host facts from a task'},
  \ {'word': 'setup', 'menu': 'Gathers facts about remote hosts'},
  \ {'word': 'shell', 'menu': 'Execute commands in nodes.'},
  \ {'word': 'slack', 'menu': 'Send Slack notifications'},
  \ {'word': 'slurp', 'menu': 'Slurps a file from remote nodes'},
  \ {'word': 'sns', 'menu': 'Send Amazon Simple Notification Service (SNS) messages'},
  \ {'word': 'stackdriver', 'menu': 'Send code deploy and annotation events to stackdriver'},
  \ {'word': 'stat', 'menu': 'retrieve file or file system status'},
  \ {'word': 'subversion', 'menu': 'Deploys a subversion repository.'},
  \ {'word': 'supervisorctl', 'menu': 'Manage the state of a program or group of programs running via supervisord'},
  \ {'word': 'svr4pkg', 'menu': 'Manage Solaris SVR4 packages'},
  \ {'word': 'swdepot', 'menu': 'Manage packages with swdepot package manager (HP-UX)'},
  \ {'word': 'synchronize', 'menu': 'Uses rsync to make synchronizing file paths in your playbooks quick and easy.'},
  \ {'word': 'sysctl', 'menu': 'Manage entries in sysctl.conf.'},
  \ {'word': 'template', 'menu': 'Templates a file out to a remote server.'},
  \ {'word': 'twilio', 'menu': 'Sends a text message to a mobile phone through Twilio.'},
  \ {'word': 'typetalk', 'menu': 'Send a message to typetalk'},
  \ {'word': 'ufw', 'menu': 'Manage firewall with UFW'},
  \ {'word': 'unarchive', 'menu': 'Copies an archive to a remote location and unpack it'},
  \ {'word': 'uri', 'menu': 'Interacts with webservices'},
  \ {'word': 'urpmi', 'menu': 'Urpmi manager'},
  \ {'word': 'user', 'menu': 'Manage user accounts'},
  \ {'word': 'virt', 'menu': 'Manages virtual machines supported by libvirt'},
  \ {'word': 'vsphere_guest', 'menu': 'Create/delete/manage a guest VM through VMware vSphere.'},
  \ {'word': 'wait_for', 'menu': 'Waits for a condition before continuing.'},
  \ {'word': 'win_feature', 'menu': 'Installs and uninstalls Windows Features'},
  \ {'word': 'win_get_url', 'menu': 'Fetches a file from a given URL'},
  \ {'word': 'win_group', 'menu': 'Add and remove local groups'},
  \ {'word': 'win_msi', 'menu': 'Installs and uninstalls Windows MSI files'},
  \ {'word': 'win_ping', 'menu': 'A windows version of the classic ping module.'},
  \ {'word': 'win_service', 'menu': 'Manages Windows services'},
  \ {'word': 'win_stat', 'menu': 'returns information about a Windows file'},
  \ {'word': 'win_user', 'menu': 'Manages local Windows user accounts'},
  \ {'word': 'xattr', 'menu': 'set/retrieve extended attributes'},
  \ {'word': 'yum', 'menu': 'Manages packages with the `yum'' package manager'},
  \ {'word': 'zabbix_maintenance', 'menu': 'Create Zabbix maintenance windows'},
  \ {'word': 'zfs', 'menu': 'Manage zfs'},
  \ {'word': 'zypper', 'menu': 'Manage packages on SUSE and openSUSE'},
  \ {'word': 'zypper_repository', 'menu': 'Add and remove Zypper repositories'},
  \ ]
