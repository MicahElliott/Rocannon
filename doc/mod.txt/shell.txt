SYNOPSIS                           *shell*

The shell module takes the command name followed by a list of space-delimited arguments. It is almost exactly like the command module but runs the command through a shell (/bin/sh) on the remote
node.

EXAMPLES                           *shell-examples*
>
    # Execute the command in remote shell; stdout goes to the specified
    # file on the remote.
    - shell: somescript.sh >> somelog.txt
   
    # Change the working directory to somedir/ before executing the command.
    - shell: somescript.sh >> somelog.txt chdir=somedir/
   
    # You can also use the 'args' form to provide the options. This command
    # will change the working directory to somedir/ and will only run when
    # somedir/somelog.txt doesn't exist.
    - shell: somescript.sh >> somelog.txt
      args:
        chdir: somedir/
        creates: somelog.txt
   
      Note
   
      If you want to execute a command securely and predictably, it may be better to use the command module instead. Best practices when writing playbooks will follow the trend of using command unless
      shell is explicitly required. When running ad-hoc commands, use your best judgement.
   
      Note
   
      To sanitize any variables passed to the shell module, you should use “{{ var | quote }}” instead of just “{{ var }}” to make sure they don’t include evil things like semicolons.
   
MORE INFO                          *shell-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
http://docs.ansible.com/shell_module.html
