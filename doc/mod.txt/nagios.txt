SYNOPSIS                           *nagios*

The nagios module has two basic functions: scheduling downtime and toggling alerts for services or hosts. All actions require the host parameter to be given explicitly. In playbooks you can use
the {{inventory_hostname}} variable to refer to the host the playbook is currently running on. You can specify multiple services at once by separating them with commas, .e.g.,
services=httpd,nfs,puppet. When specifying what service to handle there is a special service value, host, which will handle alerts/downtime for the host itself, e.g., service=host. This keyword
may not be given with other services at the same time. Setting alerts/downtime for a host does not affect alerts/downtime for any of the services running on it. To schedule downtime for all
services on particular host use keyword “all”, e.g., service=all. When using the nagios module you will need to specify your Nagios server using the delegate_to parameter.

EXAMPLES                           *nagios-examples*
>
    # set 30 minutes of apache downtime
    - nagios: action=downtime minutes=30 service=httpd host={{ inventory_hostname }}
   
    # schedule an hour of HOST downtime
    - nagios: action=downtime minutes=60 service=host host={{ inventory_hostname }}
   
    # schedule downtime for ALL services on HOST
    - nagios: action=downtime minutes=45 service=all host={{ inventory_hostname }}
   
    # schedule downtime for a few services
    - nagios: action=downtime services=frob,foobar,qeuz host={{ inventory_hostname }}
   
    # enable SMART disk alerts
    - nagios: action=enable_alerts service=smart host={{ inventory_hostname }}
   
    # "two services at once: disable httpd and nfs alerts"
    - nagios: action=disable_alerts service=httpd,nfs host={{ inventory_hostname }}
   
    # disable HOST alerts
    - nagios: action=disable_alerts service=host host={{ inventory_hostname }}
   
    # silence ALL alerts
    - nagios: action=silence host={{ inventory_hostname }}
   
    # unsilence all alerts
    - nagios: action=unsilence host={{ inventory_hostname }}
   
    # SHUT UP NAGIOS
    - nagios: action=silence_nagios
   
    # ANNOY ME NAGIOS
    - nagios: action=unsilence_nagios
   
    # command something
    - nagios: action=command command='DISABLE_FAILURE_PREDICTION'
   
MORE INFO                          *nagios-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
http://docs.ansible.com/nagios_module.html
