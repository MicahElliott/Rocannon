SYNOPSIS                           *git*

Manage git checkouts of repositories to deploy files or software.

EXAMPLES                           *git-examples*
>
    # Example git checkout from Ansible Playbooks
    - git: repo=git://foosball.example.org/path/to/repo.git
           dest=/srv/checkout
           version=release-0.22
   
    # Example read-write git checkout from github
    - git: repo=ssh://[emailÂ protected]/mylogin/hello.git dest=/home/mylogin/hello
   
    # Example just ensuring the repo checkout exists
    - git: repo=git://foosball.example.org/path/to/repo.git dest=/srv/checkout update=no
   
    # Example just get information about the repository whether or not it has
    # already been cloned locally.
    - git: repo=git://foosball.example.org/path/to/repo.git dest=/srv/checkout clone=no update=no
   
    # Example checkout a github repo and use refspec to fetch all pull requests
    - git: repo=https://github.com/ansible/ansible-examples.git dest=/src/ansible-examples refspec=+refs/pull/*:refs/heads/*
   
      Note
   
      If the task seems to be hanging, first verify remote host is in known_hosts. SSH will prompt user to authorize the first contact with a remote host. To avoid this prompt, one solution is to add
      the remote host public key in /etc/ssh/ssh_known_hosts before calling the git module, with the following command: ssh-keyscan -H remote_host.com >> /etc/ssh/ssh_known_hosts.
   
MORE INFO                          *git-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
http://docs.ansible.com/git_module.html
