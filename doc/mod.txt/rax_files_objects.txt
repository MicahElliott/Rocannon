SYNOPSIS                           *rax_files_objects*

New in version 1.5.

Upload, download, and delete objects in Rackspace Cloud Files

EXAMPLES                           *rax_files_objects-examples*
>
    - name: "Test Cloud Files Objects"
      hosts: local
      gather_facts: False
      tasks:
        - name: "Get objects from test container"
          rax_files_objects: container=testcont dest=~/Downloads/testcont
   
        - name: "Get single object from test container"
          rax_files_objects: container=testcont src=file1 dest=~/Downloads/testcont
   
        - name: "Get several objects from test container"
          rax_files_objects: container=testcont src=file1,file2,file3 dest=~/Downloads/testcont
   
        - name: "Delete one object in test container"
          rax_files_objects: container=testcont method=delete dest=file1
   
        - name: "Delete several objects in test container"
          rax_files_objects: container=testcont method=delete dest=file2,file3,file4
   
        - name: "Delete all objects in test container"
          rax_files_objects: container=testcont method=delete
   
        - name: "Upload all files to test container"
          rax_files_objects: container=testcont method=put src=~/Downloads/onehundred
   
        - name: "Upload one file to test container"
          rax_files_objects: container=testcont method=put src=~/Downloads/testcont/file1
   
        - name: "Upload one file to test container with metadata"
          rax_files_objects:
            container: testcont
            src: ~/Downloads/testcont/file2
            method: put
            meta:
              testkey: testdata
              who_uploaded_this: [emailÂ protected]
   
        - name: "Upload one file to test container with TTL of 60 seconds"
          rax_files_objects: container=testcont method=put src=~/Downloads/testcont/file3 expires=60
   
        - name: "Attempt to get remote object that does not exist"
          rax_files_objects: container=testcont method=get src=FileThatDoesNotExist.jpg dest=~/Downloads/testcont
          ignore_errors: yes
   
        - name: "Attempt to delete remote object that does not exist"
          rax_files_objects: container=testcont method=delete dest=FileThatDoesNotExist.jpg
          ignore_errors: yes
   
    - name: "Test Cloud Files Objects Metadata"
      hosts: local
      gather_facts: false
      tasks:
        - name: "Get metadata on one object"
          rax_files_objects:  container=testcont type=meta dest=file2
   
        - name: "Get metadata on several objects"
          rax_files_objects:  container=testcont type=meta src=file2,file1
   
        - name: "Set metadata on an object"
          rax_files_objects:
            container: testcont
            type: meta
            dest: file17
            method: put
            meta:
              key1: value1
              key2: value2
            clear_meta: true
   
        - name: "Verify metadata is set"
          rax_files_objects:  container=testcont type=meta src=file17
   
        - name: "Delete metadata"
          rax_files_objects:
            container: testcont
            type: meta
            dest: file17
            method: delete
            meta:
              key1: ''
              key2: ''
   
        - name: "Get metadata on all objects"
          rax_files_objects:  container=testcont type=meta
   
      Note
   
      The following environment variables can be used, RAX_USERNAME, RAX_API_KEY, RAX_CREDS_FILE, RAX_CREDENTIALS, RAX_REGION.
   
      Note
   
      RAX_CREDENTIALS and RAX_CREDS_FILE points to a credentials file appropriate for pyrax. See https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#authenticating
   
      Note
   
      RAX_USERNAME and RAX_API_KEY obviate the use of a credentials file
   
      Note
   
      RAX_REGION defines a Rackspace Public Cloud region (DFW, ORD, LON, ...)
   
MORE INFO                          *rax_files_objects-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
http://docs.ansible.com/rax_files_objects_module.html
